"use strict";
/**
 * Copyright Â© 2022 Danila Kononov (nickname: moony). All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ButtonData_1 = require("./Basic/ButtonData");
/**
 * Button that switches pagination to the last page.
 */
class LastPageButton extends ButtonData_1.default {
    /**
     * Button that switches pagination to the last page.
     * @param {ButtonStyling} style Data from which to build LastPageButton.
     */
    constructor(style) {
        super(style);
        this._setAction(LastPageButton._doAction);
        this._setDisableWhen(LastPageButton._doAction);
    }
    ;
    /**
     * Gets number of the last page of the pagination.
     * @param {PaginationData} pagination Pagination Data.
     * @returns {Promise<number>} Last page number.
     */
    static async _doAction(pagination) {
        if (!pagination.embeds)
            throw new Error("Last page button can't be used before embeds are supplied to the pagination.");
        return pagination.embeds.length - 1;
    }
    ;
}
;
exports.default = LastPageButton;
